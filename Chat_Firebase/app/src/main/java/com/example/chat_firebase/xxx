package com.example.chat_firebase;

import android.os.Bundle;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;


import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ListView;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.Iterator;

import de.hdodenhof.circleimageview.CircleImageView;


/**
 * A simple {@link Fragment} subclass.
 */
public class RequestsFragment extends Fragment {

    private View RequestsFragmentView;
    private RequestFragment_Adapter adapter;
    private ArrayList<ContactsRequest> listContacts;
    private ListView listView;
    private DatabaseReference RequestRef;
    private DatabaseReference UserRef;
    private FirebaseAuth mAuth;
    private String currentUserID;
    public RequestsFragment() {
        // Required empty public constructor
    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        RequestsFragmentView =  inflater.inflate(R.layout.fragment_requests, container, false);
        listContacts = new ArrayList<>();
        adapter = new RequestFragment_Adapter(getContext(),R.layout.user_display_layout,listContacts);
        listView = RequestsFragmentView.findViewById(R.id.listRequestFragment);
        mAuth = FirebaseAuth.getInstance();
        currentUserID = mAuth.getCurrentUser().getUid();
        RequestRef = FirebaseDatabase.getInstance().getReference().child("Chat Requests").child(currentUserID);
        UserRef = FirebaseDatabase.getInstance().getReference().child("Users");
        //ReadUserRequests();
        return RequestsFragmentView;
    }

// Hàm này có thể bị lỗi
    @Override
    public void onStart() {
        super.onStart();
        ReadUserRequests();
    }

    // Đọc thay đổi trong nhánh ID bản thân
    private void ReadUserRequests() {
        RequestRef.addChildEventListener(new ChildEventListener() {
            @Override
            public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
                ReadRequest(dataSnapshot);
            }

            @Override
            public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
                ReadRequest(dataSnapshot);
            }

            @Override
            public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {
                ReadRequest(dataSnapshot);
            }

            @Override
            public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {
                ReadRequest(dataSnapshot);

            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });

        listView.setAdapter(adapter);
    }

    // Đọc các nhánh con
    private void ReadRequest(DataSnapshot dataSnapshot){
        final String uIDs = dataSnapshot.getKey(); // Lấy lần lượt ID của các user trong danh sách
        listContacts.clear();
        RequestRef.child(uIDs).addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                if(dataSnapshot.child("request_type").exists()){
                    String type = dataSnapshot.child("request_type").getValue().toString();
                    if(type.equals("received")){
                        UserRef.child(uIDs).addValueEventListener(new ValueEventListener() {
                            @Override
                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                                String userName = dataSnapshot.child("name").getValue().toString();
                                String userStatus = dataSnapshot.child("status").getValue().toString();
                                String profileImage = dataSnapshot.child("image").getValue().toString();
                                String uid = dataSnapshot.child("uid").getValue().toString();
                                ContactsRequest ct = new ContactsRequest(userName,userStatus,profileImage,uid);
                                listContacts.add(ct);
                                adapter.notifyDataSetChanged();
                            }

                            @Override
                            public void onCancelled(@NonNull DatabaseError databaseError) {

                            }
                        });
                    }
                }

            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {

            }
        });
    }


}
